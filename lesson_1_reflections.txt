1) How did viewing a diff between two versions of a file help you see the bug that was introduced?
Encontrar bugs em arquivos grandes pode ser complicado.
Se nós temos uma versão anterior do arquivo esta tarefa pode ser simplificada.
Basta nos atermos a olhar as linhas que foram alteradas.
Para isso podemos usar o comando fc.exe arquivo1 arquivo2

2) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
We can use version history to:
 - Undo changes
 - compair versions for debuging

 3) What do you think are the pros and cons of manually choosing when to create a commit,
    like you do in Git, vs having versions automatically saved, like Google docs does?

Pros:
	You commit when changes are meaningfull
	You can describe a commit to make it more meaningfull

Cons:
	It's a manual process = Error prone
	It's personal. Two programmers can have two different commiting rules.

4) Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?


5) How can you use the commands git log and git diff to view the history of files?

6) How might using version control make you more confident to make changes that could break something?

7) Now that you have your workspace set up, what do you want to try using Git for?